{
  "name": "api-boilerplate",
  "version": "1.3.3",
  "description": "A basic skeleton with class abstraction, global & local validation, global & local exception handlers, logging &data tracking, data transfer objects, execution context, authentication, users & user roles, migrations, and default dispatchers built with NestJS",
  "author": "Isidro A. LÃ³pez G. <me@ialopezg.com> (https://ialopezg.com)",
  "license": "MIT",
  "scripts": {
    "prebuild": "rimraf dist",
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "migration:create": "ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js migration:create -f src/utils/ormconfig -d src/migrations -n",
    "migration:generate": "ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js migration:generate -f src/utils/ormconfig -d src/migrations -n",
    "migration:revert": "ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js migration:revert -f src/utils/ormconfig",
    "schema:drop": "ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js schema:drop -f src/utils/ormconfig",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json"
  },
  "dependencies": {
    "@nestjs-modules/mailer": "^1.6.0",
    "@nestjs/bull": "^0.4.1",
    "@nestjs/common": "^8.0.6",
    "@nestjs/config": "^1.0.1",
    "@nestjs/core": "^8.0.6",
    "@nestjs/jwt": "^8.0.0",
    "@nestjs/mapped-types": "^1.0.0",
    "@nestjs/passport": "^8.0.1",
    "@nestjs/platform-express": "^8.0.6",
    "@nestjs/swagger": "^5.0.9",
    "@nestjs/typeorm": "^8.0.2",
    "bcrypt": "^5.0.1",
    "bull": "^3.29.2",
    "class-transformer": "^0.4.0",
    "class-validator": "^0.13.1",
    "compression": "^1.7.4",
    "cookie-parser": "^1.4.5",
    "express": "^4.17.1",
    "express-rate-limit": "^5.3.0",
    "handlebars": "^4.7.7",
    "helmet": "^4.6.0",
    "joi": "^17.4.2",
    "lodash": "^4.17.21",
    "morgan": "^1.10.0",
    "nodemailer": "^6.6.3",
    "passport": "^0.4.1",
    "passport-jwt": "^4.0.0",
    "passport-local": "^1.0.0",
    "pg": "^8.7.1",
    "reflect-metadata": "^0.1.13",
    "request-context": "^2.0.0",
    "rimraf": "^3.0.2",
    "rxjs": "^7.2.0",
    "source-map-support": "^0.5.20",
    "swagger-ui-express": "^4.1.6",
    "typeorm": "^0.2.37",
    "typeorm-transactional-cls-hooked": "^0.1.21"
  },
  "devDependencies": {
    "@golevelup/nestjs-testing": "^0.1.2",
    "@nestjs/cli": "^8.1.1",
    "@nestjs/schematics": "^8.0.3",
    "@nestjs/testing": "^8.0.6",
    "@types/bcrypt": "^5.0.0",
    "@types/bull": "^3.15.4",
    "@types/compression": "^1.7.2",
    "@types/cookie-parser": "^1.4.2",
    "@types/express": "^4.17.13",
    "@types/express-rate-limit": "^5.1.3",
    "@types/jest": "27.0.2",
    "@types/lodash": "4.14.173",
    "@types/morgan": "^1.9.3",
    "@types/node": "^16.0.0",
    "@types/nodemailer": "^6.4.4",
    "@types/passport-jwt": "^3.0.6",
    "@types/passport-local": "^1.0.34",
    "@types/source-map-support": "^0.5.4",
    "@types/supertest": "^2.0.11",
    "@typescript-eslint/eslint-plugin": "4.31.2",
    "@typescript-eslint/parser": "^4.28.2",
    "eslint": "^7.30.0",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-prettier": "4.0.0",
    "jest": "27.0.6",
    "prettier": "^2.3.2",
    "supertest": "^6.1.3",
    "ts-jest": "^27.0.3",
    "ts-loader": "^9.2.3",
    "ts-node": "^10.0.0",
    "tsconfig-paths": "^3.10.1",
    "typescript": "^4.3.5"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node",
    "moduleNameMapper": {
      "^src/(.*)$": "<rootDir>/$1"
    }
  }
}
